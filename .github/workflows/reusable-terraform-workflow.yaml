name: 'terraform-ci'

on:
  workflow_dispatch:
    inputs:
      role-to-assume:
        description: 'IAM Role to assume'
        required: false
        default: 'arn:aws:iam::945436036260:role/oidc-terraform-deployment'

  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - develop

env:
  AWS_region: "us-east-1"

  
permissions:
  id-token: write # for OIDC
  # contexts: read #for checkout

jobs:
  terraform-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'terraform'
    steps:
      - name: clone the repo
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{vars.AWS_ACCOUNT_NUMBER}}:role/${{vars.ROLE_TO_ASSUME}}" #create a variable used by the role
          role-session-name: terraform_deployment
          aws-region: ${{ env.AWS_region }}


      - name: Setting up terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - run: terraform plan -out tfplan
        id: plan
      
      - run: terraform show -no-color tfplan
        id: show
      
      - uses: actions/github-script@v6
        env:
          PLAN: ${{ steps.show.outputs.stdout }}
        with:
          script: |
            const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
              
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })`


      - name: Terraform apply
        if: ${{(github.ref_name == 'main' && github.event.pull_request.merged == true)}}
        run: terraform apply -auto-approve
